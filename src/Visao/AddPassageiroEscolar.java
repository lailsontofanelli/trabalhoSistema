/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Visao;

import Controle.ClienteEscolar;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Lailson-pc
 */
public class AddPassageiroEscolar extends javax.swing.JFrame {
    
    ArrayList lista = new ArrayList();
    ArrayList listaCli = new ArrayList();
    ArrayList listaPas = new ArrayList();
    private int capacidade;
    
    private ServicoEscolar veioDoEscolar;
    
    /**
     * Creates new form AddPassageiro
     */
    public AddPassageiroEscolar() {
        initComponents();
    }
    
    public AddPassageiroEscolar(ArrayList listaSerEsc, ServicoEscolar esc, String tipo, int capacidade){
        initComponents();
        this.capacidade = capacidade;
        if("escolar".equals(tipo)){
            tela.setText("Passageiros Transporte Escolar");
            veioDoEscolar = esc;
            listaPas = listaSerEsc;
            atualizaPassEscolar(listaPas);
        }else{
            tela.setText("Passageiros Turismo");
            atualizaPassTurismo();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        add = new javax.swing.JButton();
        remover = new javax.swing.JButton();
        salvar = new javax.swing.JButton();
        cancelar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabClientes = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        tabPass = new javax.swing.JTable();
        tela = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel4.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(115, 117, 118), 3, true));

        jLabel1.setText("Clientes:");

        add.setText("Adicionar >>");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        remover.setText("<< Remover");
        remover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removerActionPerformed(evt);
            }
        });

        salvar.setText("Salvar");
        salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarActionPerformed(evt);
            }
        });

        cancelar.setText("Cancelar");
        cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarActionPerformed(evt);
            }
        });

        jLabel2.setText("Passageiros:");

        tabClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(tabClientes);

        tabPass.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(tabPass);

        tela.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tela.setText("Adicionar Passageiros");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(385, 385, 385)
                                .addComponent(jLabel2))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(add)
                                    .addComponent(remover))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(275, 275, 275)
                        .addComponent(salvar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 7, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tela)
                .addGap(308, 308, 308))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tela)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(add)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(remover))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(salvar)
                    .addComponent(cancelar))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        // TODO add your handling code here:
        Object o = getSelectedObjectCli();
        if (o != null){
            ClienteEscolar p = (ClienteEscolar)o;
            // adicionar passageiros na lista
            
            String[] nomesColunas = {"Nome", "CPF"};
            String cpf = p.getCpf();
            boolean esta = false;
            for (int i =0; i < listaPas.size(); i++){
                ClienteEscolar cli = (ClienteEscolar)listaPas.get(i);
                if(cli.getCpf() == cpf){
                    esta = true;
                }
            }
            if(listaPas.size() == capacidade){
                JOptionPane.showMessageDialog(this, "A lista de passageiros está cheia.\nO veículo escolhida suporta "
                        + " apenas " + capacidade + "passageiros.");
                return;
            }
            if (esta){
                JOptionPane.showMessageDialog(this, "Este passageiro já foi adicionado.");
            }else{
                listaPas.add(p);
                Object[][] dadosVetor = new Object[listaPas.size()][nomesColunas.length];
                for (int i=0; i<listaPas.size(); i++){
                    ClienteEscolar cli = (ClienteEscolar)listaPas.get(i);
                    dadosVetor[i][0] = cli.getNome();
                    dadosVetor[i][1] = cli.getCpf();
                }
                DefaultTableModel modelo = new DefaultTableModel(dadosVetor,nomesColunas);
                tabPass.setModel(modelo);
            }
            
        }
    }//GEN-LAST:event_addActionPerformed

    private void removerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removerActionPerformed
        // TODO add your handling code here:
        Object o = getSelectedObjectPas();
        if (o != null){
            ClienteEscolar p = (ClienteEscolar)o;
            String cpf = p.getCpf();
            String[] nomesColunas = {"Nome", "CPF"};
            for (int i=0; i<listaPas.size(); i++){
                ClienteEscolar cli = (ClienteEscolar)listaPas.get(i);
                if(cli.getCpf() == cpf){
                    listaPas.remove(i);
                }
            }
            Object[][] dadosVetor = new Object[listaPas.size()][nomesColunas.length];
            for (int i=0; i<listaPas.size(); i++){
                ClienteEscolar cli = (ClienteEscolar)listaPas.get(i);
                dadosVetor[i][0] = cli.getNome();
                dadosVetor[i][1] = cli.getCpf();
            }
            DefaultTableModel modelo = new DefaultTableModel(dadosVetor,nomesColunas);
            tabPass.setModel(modelo);
        }
        
    }//GEN-LAST:event_removerActionPerformed

    private void cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_cancelarActionPerformed

    private void salvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarActionPerformed
        // TODO add your handling code here:
        // CHAMO
        if (veioDoEscolar != null){
            veioDoEscolar.retornaLista(listaPas);
            this.dispose();
        }
        
    }//GEN-LAST:event_salvarActionPerformed
    
    private Object getSelectedObjectCli() {
         Object selecionado = null;
         int linhaSelecionada = tabClientes.getSelectedRow();
         if(linhaSelecionada >= 0){
             selecionado = lista.get(linhaSelecionada);
         }else{
             JOptionPane.showMessageDialog(this, "Selecione um elemento da tabela.");
         }
         return selecionado;
    }   
    private Object getSelectedObjectPas() {
        if (listaPas.size() > 0){
            Object selecionado = null;
            int linhaSelecionada = tabPass.getSelectedRow();
            if(linhaSelecionada >= 0){
                selecionado = listaPas.get(linhaSelecionada);
            }else{
                JOptionPane.showMessageDialog(this, "Selecione um elemento da tabela.");
            }
            return selecionado;
        }else{
            JOptionPane.showMessageDialog(this, "A lista de passageiros está vazia.");
            return null;
        }
    }  
     
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddPassageiroEscolar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddPassageiroEscolar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddPassageiroEscolar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddPassageiroEscolar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddPassageiroEscolar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JButton cancelar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JButton remover;
    private javax.swing.JButton salvar;
    private javax.swing.JTable tabClientes;
    private javax.swing.JTable tabPass;
    private javax.swing.JLabel tela;
    // End of variables declaration//GEN-END:variables
    
    public void atualizaPassEscolar(ArrayList listaPas){
        String[] nomesColunas = {"Nome", "CPF"};
        // atualiza lista passageiros
        Object[][] dadosVetorPass = new Object[0][nomesColunas.length];
        if(!listaPas.isEmpty()){
            dadosVetorPass = new Object[listaPas.size()][nomesColunas.length];
            for (int i=0; i<listaPas.size(); i++){
                ClienteEscolar cli = (ClienteEscolar)listaPas.get(i);
                dadosVetorPass[i][0] = cli.getNome();
                dadosVetorPass[i][1] = cli.getCpf();
            }
        }
        DefaultTableModel modeloPass = new DefaultTableModel(dadosVetorPass,nomesColunas);
        tabPass.setModel(modeloPass);
        
        // atualiza lista de clientes
        lista = new ArrayList(ClienteEscolar.consultarEscolar());
        Object[][] dadosVetor = new Object[lista.size()][nomesColunas.length];
        for (int i=0; i<lista.size(); i++){
            ClienteEscolar cli = (ClienteEscolar)lista.get(i);
            dadosVetor[i][0] = cli.getNome();
            dadosVetor[i][1] = cli.getCpf();
        }
        DefaultTableModel modelo = new DefaultTableModel(dadosVetor,nomesColunas);
        tabClientes.setModel(modelo);
    }
    
    public void atualizaPassTurismo(){
        
    }
}
